/**
 * Copyright (C) Smithsonian Astrophysical Observatory
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package cfa.vo.utils;

import com.sun.xml.rpc.server.http.MessageContextProperties;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.soap.streaming.*;
import com.sun.xml.rpc.soap.message.*;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.soap.SOAPEncodingConstants;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.lang.reflect.*;
import java.lang.Class;
import com.sun.xml.rpc.client.SenderException;
import com.sun.xml.rpc.client.*;
import com.sun.xml.rpc.client.http.*;
import javax.xml.rpc.handler.*;
import javax.xml.rpc.JAXRPCException;
import javax.xml.rpc.soap.SOAPFaultException;

public class Sesame_Stub
    extends com.sun.xml.rpc.client.StubBase
    implements cfa.vo.utils.Sesame {
    
    
    
    /*
     *  public constructor
     */
    public Sesame_Stub(HandlerChain handlerChain) {
        super(handlerChain);
        _setProperty(ENDPOINT_ADDRESS_PROPERTY, "http://cdsws.u-strasbg.fr/axis/services/Sesame");
    }
    
    
    /*
     *  implementation of sesame
     */
    public java.lang.String sesame(java.lang.String name, java.lang.String resultType, boolean all, java.lang.String service)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(sesame_sesameRequest2_sesameResponse2_OPCODE);
            cfa.vo.utils.Sesame_sesame_sesameRequest2_sesameResponse2_RequestStruct _mySesame_sesame_sesameRequest2_sesameResponse2_RequestStruct =
                new cfa.vo.utils.Sesame_sesame_sesameRequest2_sesameResponse2_RequestStruct();
            
            _mySesame_sesame_sesameRequest2_sesameResponse2_RequestStruct.setName(name);
            _mySesame_sesame_sesameRequest2_sesameResponse2_RequestStruct.setResultType(resultType);
            _mySesame_sesame_sesameRequest2_sesameResponse2_RequestStruct.setAll(all);
            _mySesame_sesame_sesameRequest2_sesameResponse2_RequestStruct.setService(service);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_sesame_sesameRequest2_sesameResponse2_sesame_QNAME);
            _bodyBlock.setValue(_mySesame_sesame_sesameRequest2_sesameResponse2_RequestStruct);
            _bodyBlock.setSerializer(ns1_mySesame_sesame_sesameRequest2_sesameResponse2_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cfa.vo.utils.Sesame_sesame_sesameRequest2_sesameResponse2_ResponseStruct _mySesame_sesame_sesameRequest2_sesameResponse2_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _mySesame_sesame_sesameRequest2_sesameResponse2_ResponseStruct =
                    (cfa.vo.utils.Sesame_sesame_sesameRequest2_sesameResponse2_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _mySesame_sesame_sesameRequest2_sesameResponse2_ResponseStruct =
                    (cfa.vo.utils.Sesame_sesame_sesameRequest2_sesameResponse2_ResponseStruct)_responseObj;
            }
            
            return _mySesame_sesame_sesameRequest2_sesameResponse2_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of sesame
     */
    public java.lang.String sesame(java.lang.String name)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(Sesame_SesameRequest_SesameResponse_OPCODE);
            cfa.vo.utils.Sesame_Sesame_SesameRequest_SesameResponse_RequestStruct2 _mySesame_Sesame_SesameRequest_SesameResponse_RequestStruct2 =
                new cfa.vo.utils.Sesame_Sesame_SesameRequest_SesameResponse_RequestStruct2();
            
            _mySesame_Sesame_SesameRequest_SesameResponse_RequestStruct2.setName(name);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_Sesame_SesameRequest_SesameResponse_Sesame_QNAME);
            _bodyBlock.setValue(_mySesame_Sesame_SesameRequest_SesameResponse_RequestStruct2);
            _bodyBlock.setSerializer(ns1_mySesame_Sesame_SesameRequest_SesameResponse_RequestStruct2_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cfa.vo.utils.Sesame_Sesame_SesameRequest_SesameResponse_ResponseStruct2 _mySesame_Sesame_SesameRequest_SesameResponse_ResponseStruct2 = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _mySesame_Sesame_SesameRequest_SesameResponse_ResponseStruct2 =
                    (cfa.vo.utils.Sesame_Sesame_SesameRequest_SesameResponse_ResponseStruct2)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _mySesame_Sesame_SesameRequest_SesameResponse_ResponseStruct2 =
                    (cfa.vo.utils.Sesame_Sesame_SesameRequest_SesameResponse_ResponseStruct2)_responseObj;
            }
            
            return _mySesame_Sesame_SesameRequest_SesameResponse_ResponseStruct2.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of sesameXML
     */
    public java.lang.String sesameXML(java.lang.String name)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(SesameXML_SesameXMLRequest_SesameXMLResponse_OPCODE);
            cfa.vo.utils.Sesame_SesameXML_SesameXMLRequest_SesameXMLResponse_RequestStruct _mySesame_SesameXML_SesameXMLRequest_SesameXMLResponse_RequestStruct =
                new cfa.vo.utils.Sesame_SesameXML_SesameXMLRequest_SesameXMLResponse_RequestStruct();
            
            _mySesame_SesameXML_SesameXMLRequest_SesameXMLResponse_RequestStruct.setName(name);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_SesameXML_SesameXMLRequest_SesameXMLResponse_SesameXML_QNAME);
            _bodyBlock.setValue(_mySesame_SesameXML_SesameXMLRequest_SesameXMLResponse_RequestStruct);
            _bodyBlock.setSerializer(ns1_mySesame_SesameXML_SesameXMLRequest_SesameXMLResponse_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cfa.vo.utils.Sesame_SesameXML_SesameXMLRequest_SesameXMLResponse_ResponseStruct _mySesame_SesameXML_SesameXMLRequest_SesameXMLResponse_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _mySesame_SesameXML_SesameXMLRequest_SesameXMLResponse_ResponseStruct =
                    (cfa.vo.utils.Sesame_SesameXML_SesameXMLRequest_SesameXMLResponse_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _mySesame_SesameXML_SesameXMLRequest_SesameXMLResponse_ResponseStruct =
                    (cfa.vo.utils.Sesame_SesameXML_SesameXMLRequest_SesameXMLResponse_ResponseStruct)_responseObj;
            }
            
            return _mySesame_SesameXML_SesameXMLRequest_SesameXMLResponse_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of sesame
     */
    public java.lang.String sesame(java.lang.String name, java.lang.String resultType)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(sesame_sesameRequest_sesameResponse_OPCODE);
            cfa.vo.utils.Sesame_sesame_sesameRequest_sesameResponse_RequestStruct _mySesame_sesame_sesameRequest_sesameResponse_RequestStruct =
                new cfa.vo.utils.Sesame_sesame_sesameRequest_sesameResponse_RequestStruct();
            
            _mySesame_sesame_sesameRequest_sesameResponse_RequestStruct.setName(name);
            _mySesame_sesame_sesameRequest_sesameResponse_RequestStruct.setResultType(resultType);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_sesame_sesameRequest_sesameResponse_sesame_QNAME);
            _bodyBlock.setValue(_mySesame_sesame_sesameRequest_sesameResponse_RequestStruct);
            _bodyBlock.setSerializer(ns1_mySesame_sesame_sesameRequest_sesameResponse_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cfa.vo.utils.Sesame_sesame_sesameRequest_sesameResponse_ResponseStruct _mySesame_sesame_sesameRequest_sesameResponse_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _mySesame_sesame_sesameRequest_sesameResponse_ResponseStruct =
                    (cfa.vo.utils.Sesame_sesame_sesameRequest_sesameResponse_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _mySesame_sesame_sesameRequest_sesameResponse_ResponseStruct =
                    (cfa.vo.utils.Sesame_sesame_sesameRequest_sesameResponse_ResponseStruct)_responseObj;
            }
            
            return _mySesame_sesame_sesameRequest_sesameResponse_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of sesame
     */
    public java.lang.String sesame(java.lang.String name, java.lang.String resultType, boolean all)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(sesame_sesameRequest1_sesameResponse1_OPCODE);
            cfa.vo.utils.Sesame_sesame_sesameRequest1_sesameResponse1_RequestStruct _mySesame_sesame_sesameRequest1_sesameResponse1_RequestStruct =
                new cfa.vo.utils.Sesame_sesame_sesameRequest1_sesameResponse1_RequestStruct();
            
            _mySesame_sesame_sesameRequest1_sesameResponse1_RequestStruct.setName(name);
            _mySesame_sesame_sesameRequest1_sesameResponse1_RequestStruct.setResultType(resultType);
            _mySesame_sesame_sesameRequest1_sesameResponse1_RequestStruct.setAll(all);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_sesame_sesameRequest1_sesameResponse1_sesame_QNAME);
            _bodyBlock.setValue(_mySesame_sesame_sesameRequest1_sesameResponse1_RequestStruct);
            _bodyBlock.setSerializer(ns1_mySesame_sesame_sesameRequest1_sesameResponse1_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cfa.vo.utils.Sesame_sesame_sesameRequest1_sesameResponse1_ResponseStruct _mySesame_sesame_sesameRequest1_sesameResponse1_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _mySesame_sesame_sesameRequest1_sesameResponse1_ResponseStruct =
                    (cfa.vo.utils.Sesame_sesame_sesameRequest1_sesameResponse1_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _mySesame_sesame_sesameRequest1_sesameResponse1_ResponseStruct =
                    (cfa.vo.utils.Sesame_sesame_sesameRequest1_sesameResponse1_ResponseStruct)_responseObj;
            }
            
            return _mySesame_sesame_sesameRequest1_sesameResponse1_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getAvailability
     */
    public java.lang.String getAvailability()
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(getAvailability_getAvailabilityRequest_getAvailabilityResponse_OPCODE);
            cfa.vo.utils.Sesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_RequestStruct _mySesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_RequestStruct =
                new cfa.vo.utils.Sesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_RequestStruct();
            
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns2_getAvailability_getAvailabilityRequest_getAvailabilityResponse_getAvailability_QNAME);
            _bodyBlock.setValue(_mySesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_RequestStruct);
            _bodyBlock.setSerializer(ns2_mySesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cfa.vo.utils.Sesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_ResponseStruct _mySesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _mySesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_ResponseStruct =
                    (cfa.vo.utils.Sesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _mySesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_ResponseStruct =
                    (cfa.vo.utils.Sesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_ResponseStruct)_responseObj;
            }
            
            return _mySesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_ResponseStruct.getGetAvailabilityReturn();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of main
     */
    public void main(java.lang.String[] in0)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(main_mainRequest_mainResponse_OPCODE);
            cfa.vo.utils.Sesame_main_mainRequest_mainResponse_RequestStruct _mySesame_main_mainRequest_mainResponse_RequestStruct =
                new cfa.vo.utils.Sesame_main_mainRequest_mainResponse_RequestStruct();
            
            _mySesame_main_mainRequest_mainResponse_RequestStruct.setIn0(in0);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns2_main_mainRequest_mainResponse_main_QNAME);
            _bodyBlock.setValue(_mySesame_main_mainRequest_mainResponse_RequestStruct);
            _bodyBlock.setSerializer(ns2_mySesame_main_mainRequest_mainResponse_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cfa.vo.utils.Sesame_main_mainRequest_mainResponse_ResponseStruct _mySesame_main_mainRequest_mainResponse_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _mySesame_main_mainRequest_mainResponse_ResponseStruct =
                    (cfa.vo.utils.Sesame_main_mainRequest_mainResponse_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _mySesame_main_mainRequest_mainResponse_ResponseStruct =
                    (cfa.vo.utils.Sesame_main_mainRequest_mainResponse_ResponseStruct)_responseObj;
            }
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void _readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case sesame_sesameRequest2_sesameResponse2_OPCODE:
                _deserialize_sesame_sesameRequest2_sesameResponse2(bodyReader, deserializationContext, state);
                break;
            case Sesame_SesameRequest_SesameResponse_OPCODE:
                _deserialize_Sesame_SesameRequest_SesameResponse(bodyReader, deserializationContext, state);
                break;
            case SesameXML_SesameXMLRequest_SesameXMLResponse_OPCODE:
                _deserialize_SesameXML_SesameXMLRequest_SesameXMLResponse(bodyReader, deserializationContext, state);
                break;
            case sesame_sesameRequest_sesameResponse_OPCODE:
                _deserialize_sesame_sesameRequest_sesameResponse(bodyReader, deserializationContext, state);
                break;
            case sesame_sesameRequest1_sesameResponse1_OPCODE:
                _deserialize_sesame_sesameRequest1_sesameResponse1(bodyReader, deserializationContext, state);
                break;
            case getAvailability_getAvailabilityRequest_getAvailabilityResponse_OPCODE:
                _deserialize_getAvailability_getAvailabilityRequest_getAvailabilityResponse(bodyReader, deserializationContext, state);
                break;
            case main_mainRequest_mainResponse_OPCODE:
                _deserialize_main_mainRequest_mainResponse(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SenderException("sender.response.unrecognizedOperation", java.lang.Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the sesame operation.
     */
    private void _deserialize_sesame_sesameRequest2_sesameResponse2(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object mySesame_sesame_sesameRequest2_sesameResponse2_ResponseStructObj =
            ns1_mySesame_sesame_sesameRequest2_sesameResponse2_ResponseStruct_SOAPSerializer.deserialize(ns1_sesame_sesameRequest2_sesameResponse2_sesameResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_sesame_sesameRequest2_sesameResponse2_sesameResponse_QNAME);
        bodyBlock.setValue(mySesame_sesame_sesameRequest2_sesameResponse2_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the Sesame operation.
     */
    private void _deserialize_Sesame_SesameRequest_SesameResponse(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object mySesame_Sesame_SesameRequest_SesameResponse_ResponseStruct2Obj =
            ns1_mySesame_Sesame_SesameRequest_SesameResponse_ResponseStruct2_SOAPSerializer.deserialize(ns1_Sesame_SesameRequest_SesameResponse_SesameResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_Sesame_SesameRequest_SesameResponse_SesameResponse_QNAME);
        bodyBlock.setValue(mySesame_Sesame_SesameRequest_SesameResponse_ResponseStruct2Obj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the SesameXML operation.
     */
    private void _deserialize_SesameXML_SesameXMLRequest_SesameXMLResponse(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object mySesame_SesameXML_SesameXMLRequest_SesameXMLResponse_ResponseStructObj =
            ns1_mySesame_SesameXML_SesameXMLRequest_SesameXMLResponse_ResponseStruct_SOAPSerializer.deserialize(ns1_SesameXML_SesameXMLRequest_SesameXMLResponse_SesameXMLResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_SesameXML_SesameXMLRequest_SesameXMLResponse_SesameXMLResponse_QNAME);
        bodyBlock.setValue(mySesame_SesameXML_SesameXMLRequest_SesameXMLResponse_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the sesame operation.
     */
    private void _deserialize_sesame_sesameRequest_sesameResponse(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object mySesame_sesame_sesameRequest_sesameResponse_ResponseStructObj =
            ns1_mySesame_sesame_sesameRequest_sesameResponse_ResponseStruct_SOAPSerializer.deserialize(ns1_sesame_sesameRequest_sesameResponse_sesameResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_sesame_sesameRequest_sesameResponse_sesameResponse_QNAME);
        bodyBlock.setValue(mySesame_sesame_sesameRequest_sesameResponse_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the sesame operation.
     */
    private void _deserialize_sesame_sesameRequest1_sesameResponse1(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object mySesame_sesame_sesameRequest1_sesameResponse1_ResponseStructObj =
            ns1_mySesame_sesame_sesameRequest1_sesameResponse1_ResponseStruct_SOAPSerializer.deserialize(ns1_sesame_sesameRequest1_sesameResponse1_sesameResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_sesame_sesameRequest1_sesameResponse1_sesameResponse_QNAME);
        bodyBlock.setValue(mySesame_sesame_sesameRequest1_sesameResponse1_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getAvailability operation.
     */
    private void _deserialize_getAvailability_getAvailabilityRequest_getAvailabilityResponse(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object mySesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_ResponseStructObj =
            ns1_mySesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_ResponseStruct_SOAPSerializer.deserialize(ns1_getAvailability_getAvailabilityRequest_getAvailabilityResponse_getAvailabilityResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAvailability_getAvailabilityRequest_getAvailabilityResponse_getAvailabilityResponse_QNAME);
        bodyBlock.setValue(mySesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the main operation.
     */
    private void _deserialize_main_mainRequest_mainResponse(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object mySesame_main_mainRequest_mainResponse_ResponseStructObj =
            ns1_mySesame_main_mainRequest_mainResponse_ResponseStruct_SOAPSerializer.deserialize(ns1_main_mainRequest_mainResponse_mainResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_main_mainRequest_mainResponse_mainResponse_QNAME);
        bodyBlock.setValue(mySesame_main_mainRequest_mainResponse_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    
    
    public java.lang.String _getDefaultEnvelopeEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }
    
    public java.lang.String _getImplicitEnvelopeEncodingStyle() {
        return "";
    }
    
    public java.lang.String _getEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }
    
    public void _setEncodingStyle(java.lang.String encodingStyle) {
        throw new UnsupportedOperationException("cannot set encoding style");
    }
    
    
    
    
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected java.lang.String[] _getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public javax.xml.namespace.QName[] _getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    public void _initialize(InternalTypeMappingRegistry registry) throws Exception {
        super._initialize(registry);
        ns1_mySesame_sesame_sesameRequest2_sesameResponse2_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, cfa.vo.utils.Sesame_sesame_sesameRequest2_sesameResponse2_RequestStruct.class, ns1_sesame_TYPE_QNAME);
        ns2_mySesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, cfa.vo.utils.Sesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_RequestStruct.class, ns2_getAvailability_TYPE_QNAME);
        ns1_mySesame_sesame_sesameRequest2_sesameResponse2_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, cfa.vo.utils.Sesame_sesame_sesameRequest2_sesameResponse2_ResponseStruct.class, ns1_sesameResponse_TYPE_QNAME);
        ns1_mySesame_sesame_sesameRequest_sesameResponse_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, cfa.vo.utils.Sesame_sesame_sesameRequest_sesameResponse_ResponseStruct.class, ns1_sesameResponse_TYPE_QNAME);
        ns1_mySesame_SesameXML_SesameXMLRequest_SesameXMLResponse_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, cfa.vo.utils.Sesame_SesameXML_SesameXMLRequest_SesameXMLResponse_RequestStruct.class, ns1_SesameXML_TYPE_QNAME);
        ns1_mySesame_SesameXML_SesameXMLRequest_SesameXMLResponse_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, cfa.vo.utils.Sesame_SesameXML_SesameXMLRequest_SesameXMLResponse_ResponseStruct.class, ns1_SesameXMLResponse_TYPE_QNAME);
        ns1_mySesame_Sesame_SesameRequest_SesameResponse_ResponseStruct2_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, cfa.vo.utils.Sesame_Sesame_SesameRequest_SesameResponse_ResponseStruct2.class, ns1_SesameResponse_TYPE_QNAME);
        ns1_mySesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, cfa.vo.utils.Sesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_ResponseStruct.class, ns1_getAvailabilityResponse_TYPE_QNAME);
        ns1_mySesame_sesame_sesameRequest1_sesameResponse1_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, cfa.vo.utils.Sesame_sesame_sesameRequest1_sesameResponse1_RequestStruct.class, ns1_sesame_TYPE_QNAME);
        ns1_mySesame_main_mainRequest_mainResponse_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, cfa.vo.utils.Sesame_main_mainRequest_mainResponse_ResponseStruct.class, ns1_mainResponse_TYPE_QNAME);
        ns1_mySesame_sesame_sesameRequest1_sesameResponse1_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, cfa.vo.utils.Sesame_sesame_sesameRequest1_sesameResponse1_ResponseStruct.class, ns1_sesameResponse_TYPE_QNAME);
        ns2_mySesame_main_mainRequest_mainResponse_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, cfa.vo.utils.Sesame_main_mainRequest_mainResponse_RequestStruct.class, ns2_main_TYPE_QNAME);
        ns1_mySesame_Sesame_SesameRequest_SesameResponse_RequestStruct2_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, cfa.vo.utils.Sesame_Sesame_SesameRequest_SesameResponse_RequestStruct2.class, ns1_Sesame_TYPE_QNAME);
        ns1_mySesame_sesame_sesameRequest_sesameResponse_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, cfa.vo.utils.Sesame_sesame_sesameRequest_sesameResponse_RequestStruct.class, ns1_sesame_TYPE_QNAME);
    }
    
    private static final javax.xml.namespace.QName _portName = new QName("urn:Sesame", "Sesame");
    private static final int sesame_sesameRequest2_sesameResponse2_OPCODE = 0;
    private static final int Sesame_SesameRequest_SesameResponse_OPCODE = 1;
    private static final int SesameXML_SesameXMLRequest_SesameXMLResponse_OPCODE = 2;
    private static final int sesame_sesameRequest_sesameResponse_OPCODE = 3;
    private static final int sesame_sesameRequest1_sesameResponse1_OPCODE = 4;
    private static final int getAvailability_getAvailabilityRequest_getAvailabilityResponse_OPCODE = 5;
    private static final int main_mainRequest_mainResponse_OPCODE = 6;
    private static final javax.xml.namespace.QName ns1_sesame_sesameRequest2_sesameResponse2_sesame_QNAME = new QName("urn:Sesame", "sesame");
    private static final javax.xml.namespace.QName ns1_sesame_TYPE_QNAME = new QName("urn:Sesame", "sesame");
    private CombinedSerializer ns1_mySesame_sesame_sesameRequest2_sesameResponse2_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_sesame_sesameRequest2_sesameResponse2_sesameResponse_QNAME = new QName("urn:Sesame", "sesameResponse");
    private static final javax.xml.namespace.QName ns1_sesameResponse_TYPE_QNAME = new QName("urn:Sesame", "sesameResponse");
    private CombinedSerializer ns1_mySesame_sesame_sesameRequest2_sesameResponse2_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_Sesame_SesameRequest_SesameResponse_Sesame_QNAME = new QName("urn:Sesame", "Sesame");
    private static final javax.xml.namespace.QName ns1_Sesame_TYPE_QNAME = new QName("urn:Sesame", "Sesame");
    private CombinedSerializer ns1_mySesame_Sesame_SesameRequest_SesameResponse_RequestStruct2_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_Sesame_SesameRequest_SesameResponse_SesameResponse_QNAME = new QName("urn:Sesame", "SesameResponse");
    private static final javax.xml.namespace.QName ns1_SesameResponse_TYPE_QNAME = new QName("urn:Sesame", "SesameResponse");
    private CombinedSerializer ns1_mySesame_Sesame_SesameRequest_SesameResponse_ResponseStruct2_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_SesameXML_SesameXMLRequest_SesameXMLResponse_SesameXML_QNAME = new QName("urn:Sesame", "SesameXML");
    private static final javax.xml.namespace.QName ns1_SesameXML_TYPE_QNAME = new QName("urn:Sesame", "SesameXML");
    private CombinedSerializer ns1_mySesame_SesameXML_SesameXMLRequest_SesameXMLResponse_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_SesameXML_SesameXMLRequest_SesameXMLResponse_SesameXMLResponse_QNAME = new QName("urn:Sesame", "SesameXMLResponse");
    private static final javax.xml.namespace.QName ns1_SesameXMLResponse_TYPE_QNAME = new QName("urn:Sesame", "SesameXMLResponse");
    private CombinedSerializer ns1_mySesame_SesameXML_SesameXMLRequest_SesameXMLResponse_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_sesame_sesameRequest_sesameResponse_sesame_QNAME = new QName("urn:Sesame", "sesame");
    private CombinedSerializer ns1_mySesame_sesame_sesameRequest_sesameResponse_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_sesame_sesameRequest_sesameResponse_sesameResponse_QNAME = new QName("urn:Sesame", "sesameResponse");
    private CombinedSerializer ns1_mySesame_sesame_sesameRequest_sesameResponse_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_sesame_sesameRequest1_sesameResponse1_sesame_QNAME = new QName("urn:Sesame", "sesame");
    private CombinedSerializer ns1_mySesame_sesame_sesameRequest1_sesameResponse1_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_sesame_sesameRequest1_sesameResponse1_sesameResponse_QNAME = new QName("urn:Sesame", "sesameResponse");
    private CombinedSerializer ns1_mySesame_sesame_sesameRequest1_sesameResponse1_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns2_getAvailability_getAvailabilityRequest_getAvailabilityResponse_getAvailability_QNAME = new QName("http://DefaultNamespace", "getAvailability");
    private static final javax.xml.namespace.QName ns2_getAvailability_TYPE_QNAME = new QName("http://DefaultNamespace", "getAvailability");
    private CombinedSerializer ns2_mySesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAvailability_getAvailabilityRequest_getAvailabilityResponse_getAvailabilityResponse_QNAME = new QName("urn:Sesame", "getAvailabilityResponse");
    private static final javax.xml.namespace.QName ns1_getAvailabilityResponse_TYPE_QNAME = new QName("urn:Sesame", "getAvailabilityResponse");
    private CombinedSerializer ns1_mySesame_getAvailability_getAvailabilityRequest_getAvailabilityResponse_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns2_main_mainRequest_mainResponse_main_QNAME = new QName("http://DefaultNamespace", "main");
    private static final javax.xml.namespace.QName ns2_main_TYPE_QNAME = new QName("http://DefaultNamespace", "main");
    private CombinedSerializer ns2_mySesame_main_mainRequest_mainResponse_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_main_mainRequest_mainResponse_mainResponse_QNAME = new QName("urn:Sesame", "mainResponse");
    private static final javax.xml.namespace.QName ns1_mainResponse_TYPE_QNAME = new QName("urn:Sesame", "mainResponse");
    private CombinedSerializer ns1_mySesame_main_mainRequest_mainResponse_ResponseStruct_SOAPSerializer;
    private static final java.lang.String[] myNamespace_declarations =
                                        new java.lang.String[] {
                                            "ns0", "urn:Sesame",
                                            "ns1", "http://DefaultNamespace"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
}
