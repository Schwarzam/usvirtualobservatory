//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.288
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.0.3705.288.
// 
namespace Replicate.localhost {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RegistryAdminSoap", Namespace="http://www.us-vo.org")]
    public class RegistryAdmin : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public RegistryAdmin() {
            this.Url = "http://localhost/registry/registryadmin.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.us-vo.org/Load", RequestNamespace="http://www.us-vo.org", ResponseNamespace="http://www.us-vo.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Load(Resource[] resources, string PassPhrase) {
            object[] results = this.Invoke("Load", new object[] {
                        resources,
                        PassPhrase});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoad(Resource[] resources, string PassPhrase, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Load", new object[] {
                        resources,
                        PassPhrase}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLoad(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.us-vo.org/LoadFlatResource", RequestNamespace="http://www.us-vo.org", ResponseNamespace="http://www.us-vo.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadFlatResource(
                    string Title, 
                    string ShortName, 
                    string Publisher, 
                    string Creator, 
                    string Subject, 
                    string Description, 
                    string Contributor, 
                    string Version, 
                    string Identifier, 
                    string ReferenceURL, 
                    string ServiceURL, 
                    string ContactName, 
                    string ContactEmail, 
                    string Type, 
                    string CoverageSpatial, 
                    string CoverageSpectral, 
                    string CoverageTemporal, 
                    System.Single EntrySize, 
                    System.Single MaxSR, 
                    int MaxRecords, 
                    string ContentLevel, 
                    string Facility, 
                    string Instrument, 
                    string Format, 
                    string ServiceType, 
                    string Compliance, 
                    string ImageServiceType, 
                    System.Single MaxQueryRegionSizeLat, 
                    System.Single MaxQueryRegionSizeLong, 
                    int MaxImageExtentLat, 
                    int MaxImageExtentLong, 
                    int MaxFileSize, 
                    int MaxImageSizeLat, 
                    int MaxImageSizeLong, 
                    System.DateTime Date, 
                    string VOTableColumns, 
                    string harvestedfrom, 
                    string footprint, 
                    string PassPhrase) {
            object[] results = this.Invoke("LoadFlatResource", new object[] {
                        Title,
                        ShortName,
                        Publisher,
                        Creator,
                        Subject,
                        Description,
                        Contributor,
                        Version,
                        Identifier,
                        ReferenceURL,
                        ServiceURL,
                        ContactName,
                        ContactEmail,
                        Type,
                        CoverageSpatial,
                        CoverageSpectral,
                        CoverageTemporal,
                        EntrySize,
                        MaxSR,
                        MaxRecords,
                        ContentLevel,
                        Facility,
                        Instrument,
                        Format,
                        ServiceType,
                        Compliance,
                        ImageServiceType,
                        MaxQueryRegionSizeLat,
                        MaxQueryRegionSizeLong,
                        MaxImageExtentLat,
                        MaxImageExtentLong,
                        MaxFileSize,
                        MaxImageSizeLat,
                        MaxImageSizeLong,
                        Date,
                        VOTableColumns,
                        harvestedfrom,
                        footprint,
                        PassPhrase});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadFlatResource(
                    string Title, 
                    string ShortName, 
                    string Publisher, 
                    string Creator, 
                    string Subject, 
                    string Description, 
                    string Contributor, 
                    string Version, 
                    string Identifier, 
                    string ReferenceURL, 
                    string ServiceURL, 
                    string ContactName, 
                    string ContactEmail, 
                    string Type, 
                    string CoverageSpatial, 
                    string CoverageSpectral, 
                    string CoverageTemporal, 
                    System.Single EntrySize, 
                    System.Single MaxSR, 
                    int MaxRecords, 
                    string ContentLevel, 
                    string Facility, 
                    string Instrument, 
                    string Format, 
                    string ServiceType, 
                    string Compliance, 
                    string ImageServiceType, 
                    System.Single MaxQueryRegionSizeLat, 
                    System.Single MaxQueryRegionSizeLong, 
                    int MaxImageExtentLat, 
                    int MaxImageExtentLong, 
                    int MaxFileSize, 
                    int MaxImageSizeLat, 
                    int MaxImageSizeLong, 
                    System.DateTime Date, 
                    string VOTableColumns, 
                    string harvestedfrom, 
                    string footprint, 
                    string PassPhrase, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("LoadFlatResource", new object[] {
                        Title,
                        ShortName,
                        Publisher,
                        Creator,
                        Subject,
                        Description,
                        Contributor,
                        Version,
                        Identifier,
                        ReferenceURL,
                        ServiceURL,
                        ContactName,
                        ContactEmail,
                        Type,
                        CoverageSpatial,
                        CoverageSpectral,
                        CoverageTemporal,
                        EntrySize,
                        MaxSR,
                        MaxRecords,
                        ContentLevel,
                        Facility,
                        Instrument,
                        Format,
                        ServiceType,
                        Compliance,
                        ImageServiceType,
                        MaxQueryRegionSizeLat,
                        MaxQueryRegionSizeLong,
                        MaxImageExtentLat,
                        MaxImageExtentLong,
                        MaxFileSize,
                        MaxImageSizeLat,
                        MaxImageSizeLong,
                        Date,
                        VOTableColumns,
                        harvestedfrom,
                        footprint,
                        PassPhrase}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLoadFlatResource(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.us-vo.org/DSQueryRegistry", RequestNamespace="http://www.us-vo.org", ResponseNamespace="http://www.us-vo.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DSQueryRegistry(string predicate) {
            object[] results = this.Invoke("DSQueryRegistry", new object[] {
                        predicate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDSQueryRegistry(string predicate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DSQueryRegistry", new object[] {
                        predicate}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndDSQueryRegistry(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.us-vo.org/DSQuery", RequestNamespace="http://www.us-vo.org", ResponseNamespace="http://www.us-vo.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DSQuery(string sqlStmnt, string password) {
            object[] results = this.Invoke("DSQuery", new object[] {
                        sqlStmnt,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDSQuery(string sqlStmnt, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DSQuery", new object[] {
                        sqlStmnt,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndDSQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.us-vo.org/HarvestOAI", RequestNamespace="http://www.us-vo.org", ResponseNamespace="http://www.us-vo.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HarvestOAI(string url, System.DateTime from, string passphrase) {
            object[] results = this.Invoke("HarvestOAI", new object[] {
                        url,
                        from,
                        passphrase});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHarvestOAI(string url, System.DateTime from, string passphrase, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HarvestOAI", new object[] {
                        url,
                        from,
                        passphrase}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndHarvestOAI(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.us-vo.org/HarvestVizier", RequestNamespace="http://www.us-vo.org", ResponseNamespace="http://www.us-vo.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HarvestVizier(string passphrase) {
            object[] results = this.Invoke("HarvestVizier", new object[] {
                        passphrase});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHarvestVizier(string passphrase, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HarvestVizier", new object[] {
                        passphrase}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndHarvestVizier(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.us-vo.org/HarvestAstroGrid", RequestNamespace="http://www.us-vo.org", ResponseNamespace="http://www.us-vo.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HarvestAstroGrid(string passphrase) {
            object[] results = this.Invoke("HarvestAstroGrid", new object[] {
                        passphrase});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHarvestAstroGrid(string passphrase, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HarvestAstroGrid", new object[] {
                        passphrase}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndHarvestAstroGrid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.us-vo.org/DeleteEntry", RequestNamespace="http://www.us-vo.org", ResponseNamespace="http://www.us-vo.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteEntry(string identifier, string passPhrase) {
            object[] results = this.Invoke("DeleteEntry", new object[] {
                        identifier,
                        passPhrase});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteEntry(string identifier, string passPhrase, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteEntry", new object[] {
                        identifier,
                        passPhrase}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndDeleteEntry(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.us-vo.org/DSKeywordSearch", RequestNamespace="http://www.us-vo.org", ResponseNamespace="http://www.us-vo.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DSKeywordSearch(string keywords, bool andKeys) {
            object[] results = this.Invoke("DSKeywordSearch", new object[] {
                        keywords,
                        andKeys});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDSKeywordSearch(string keywords, bool andKeys, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DSKeywordSearch", new object[] {
                        keywords,
                        andKeys}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndDSKeywordSearch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.us-vo.org/ListDBColumns", RequestNamespace="http://www.us-vo.org", ResponseNamespace="http://www.us-vo.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ListDBColumns() {
            object[] results = this.Invoke("ListDBColumns", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListDBColumns(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListDBColumns", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndListDBColumns(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
    }
    
    
}
