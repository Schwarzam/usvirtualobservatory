package dalserver;
/**
 * Raw data for the Spectral Linedata model (this class is autogenerated).
 * See {@link dalserver.SlapKeywordFactory}.
 */
public class SlapKeywordData {
  /** CSV data for the Spectral Line data model. */
  public static final String[] data = {
  "Field ID,UTYPE,UCD,Description,FITS,CSV,DataType,ArraySize,Unit,SlapUnit,Hint,Default",
  ",,,,,,,,,,,",
  "QueryScore,slap:QueryScore,,Line ranking “more closely matches the query parameters”,,,,,,,,",
  ",,,,,,,,,,,",
  "wavelength,ssldm:Line.wavelength.value,em.wl,the wavelength in the vacuum of the transition originating the line,,,double,,m,,,",
  "title,ssdlm:Line.title,em.line,small description identifying the line,,,char,*,,,,",
  "status,ssdlm:Line.identificationStatus,,identification status of the line,,,char,*,,,,",
  "species,ssdlm:Line.species.name,phys.atmol.element,name of the chemical element source of this line,,,char,*,,,,",
  "initialLevelName,ssdlm:Line.initialLevel.name,phys.atmol.initial;phys.atmol.level,description of the initial level of the transition originating the line,,,char ,*,,,,",
  "finalLevelName,ssdlm:Line.finalLevel.name,phys.atmol.final;phys.atmol.level,description of the final level of the transition originating the line,,,char ,*,,,,",
  "obsWavelength,ssdlm:Line.observedWavelength.value,em.wl,observed wavelength in the vacuum of the transition originating the line in meters,,,double,,m,,,",
  "initialLevelEnergy,ssdlm:Line.initialLevel.energy.value,phys.energy;phys.atmol.initial;phys.atmol.level,energy for the INITIAL level of the transition,,,double,,J,,,",
  "finalLevelEnergy,ssdlm:Line.finalLevel.energy.value,phys.energy;phys.atmol.final;phys.atmol.level,energy for the FINAL level of the transition,,,double,,J,,,",
  "initialLevelConfiguration,ssdlm:Line.initialLevel.configuration,,Description of the electron configuration of the initial level of the line,,,char ,*,,,,",
  "finalLevelConfiguration,ssdlm:Line.finalLevel.configuration,,describing the electron configuration of the final level of the line,,,char ,*,,,,",
  "initialLevelState,ssdlm:Line.initialLevel.quantumState,,Description of the quantum state of the initial level in a parseable string representation,,,char ,*,,,,",
  "finalLevelState,ssdlm:Line.finalLevel.quantumState,,Description of the quantum state of the final level in a parseable string representation,,,char ,*,,,,",
  ",,,,,,,,,,,",
  "processName,ssldm:Process.name,,description of the physical processes responsible for the generation of for the modification of its physical properties,,,char ,*,,,,",
  ",,,,,,,,,,,",
  ",,,,,,,,,,,",
  "targetName,Target.Name,,short string identifying the observed astronomical object, suitable for input to a name resolver,,,char ,*,,,,",
  ",,,,,,,,,,,",
  "location,char:SpatialAxis.Coverage.Location.Value,pos,observation position of the observation in the format: ra dec, white space separated and both in deg,,,double,*,deg,,,",
  "coverageStart,char:TimeAxis.Coverage.Bounds.Start,time.start;obs.exposure,start time for the observation in MJD with units of days,,,char ,*,,,,",
  "coverageStop,char:TimeAxis.Coverage.Bounds.Stop,time.stop;obs.exposure,end time for the observation in MJD with units of days,,,char ,*,,,,",
  ",,,,,,,,,,,",
  "bibcode,goober,meta.bib,,,,char,*,,,,",
  "referenceURL,goober,meta.ref.url,,,,char,*,,,,",
  };
}
