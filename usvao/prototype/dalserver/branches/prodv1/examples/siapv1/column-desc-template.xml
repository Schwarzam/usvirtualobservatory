<?xml version="1.0" encoding="UTF-8"?>
<!--
  -  A description of a set of possible keywords that can appear in DAL 
  -  service response.  The keywords are presented in terms of parameters
  -  and parameter groups.  This file is usually read in by the service
  -  implementation at load-time to configure the service. 
  -
  -  This file describes the columns for a SIA (Simple Image Access)
  -  service response.  
  -
  -  Syntax:
  -  A keyword is described via a <param> element and its component data 
  -  are provided as child elements in two possible ways.
  -
  -  The first way is via a <summary> element, which optimizes for easy 
  -  authoring by hand.  The contents have a "name: value" format, e.g.:

       name:          title
       datatype:      char
       arraysize:     *
       utype:         Line.title
       ucd:           em.line
       description:   small description identifying the line

  -  Each line within the summary tag contains one component of the keyword 
  -  metadata; an end-of-line character indicates the end of the value.  The 
  -  first colon in the line delimits the keyword metadata name from its value.
  -  Spaces before the datum name, before and after the (first) colon, and 
  -  after the value (including the end-of-line character) are discarded.
  -
  -  The second way to specify this metadata is with individual child elements 
  -  named after the metadatum name:

       <name>      title      </name>
       <datatype>  char       </datatype>
       <arraysize> *          </arraysize>
       <utype>     Line.title </utype>
       <ucd>       em.line    </ucd>
       <description> 
          an appropriate but brief string that adequately describes
          the line being presented in the current row to reasonably 
          informed consumer.
       </description>

  -  Like with the summary format, extra space is thrown away before being 
  -  used.  It is different in that values may contain internal end-of-line 
  -  characters (which are collapsed into a single space when parsed).
  -
  -  In either form, a metadatum can only be given once per parameter.  If a 
  -  metadatum is set by both the summary element and its own element, the 
  -  value given by the XML element takes precedence.  Any metadata not set
  -  will be assumed to be undefined unless a default is specified (as below).
  -
  -  The following metadata can be set:
  -    name           a short name of the keyword; this maps to the VOTABLE 
  -                      PARAM attribute, name.  If not provided, the default
  -                      will be the value of "id" (if set) or "utype".
  -    id             a globally unique name for the keyword; maps to the 
  -                      VOTABLE PARAM attribute, id.  If not provided, the 
  -                      default will be the value of "name" (if set) or 
  -                      "utype".
  -    datatype       the computing data type for values associated with this
  -                      parameter.  The default will be assumed to be "char".
  -                      VOTABLE PARAM:  datatype.
  -    arraysize      when given, indicates the shape of array values
  -    canonicalunit  the value unit associated with this keyword according to 
  -                      the data model.  Default is the value of "unit"
  -    unit           the value unit associated with this keyword for the 
  -                      purposes of this service.  Default is the value of 
  -                      "canonicalunit"
  -    utype          the utype describing this keyword
  -    ucd            the UCD describing this keyword
  -    description    a human read-able description of the keyword's meaning
  -    fits           The FITS keyword to use
  -    cvs            the CVS keyword to use
  -    hint          arbitrary processing hint: Only those with the hint 'x' will be
  -                  exported/returned in responses to client requests.
  -    default        the default value
  -  
  -  The metadata must include at a minimum (via explicitly setting it or 
  -  by default) a name.  
  -
  -  A group is used to indicate that several parameters go together; these
  -  are represented in a similar way.  The <group> element can contain a 
  -  <summary> child and/or individual metadata elements to set the group 
  -  properties.  It then includes the <param> element for each of the 
  -  parameters included in the group.  The following group metadata are 
  -  supported:
  -    name           a short name of the group
  -    id             a globally unique name for the group
  -    utype          the utype describing this keyword
  -    ucd            the UCD describing this keyword
  -    description    a human read-able description of the keyword.
  - 
  -   
  -->
<!DOCTYPE doc [
<!ENTITY stdKeywords SYSTEM "webapps/siapv1/WEB-INF//std-columns.xml">
]>
<keywords>
&stdKeywords;

<!-- ===================================================================
  Image Metadata
  =================================================================== -->
<param> <summary>
name:          Title
datatype:      char   <!-- use for string values -->
arraysize:     *      <!-- use for string values -->
utype:         Image.DataID.Title
ucd:           VOX:Image_Title
hint:         x
</summary> 
  <description>
    Required. Contains a short (usually one line) description of the image. This should concisely describe the image to a user, typically identifying the image source (e.g., survey name), object name or field coordinates, bandpass/filter, and so forth. Note that a client application may present the user with a combined list of images from many different queries and sources: the title string is important to identify each image to the user.
  </description>
</param>

<param> <summary>
name:          Instrument
datatype:      char
arraysize:     *      <!-- use for string values -->
utype:         Image.DataID.Instrument
ucd:           INST_ID
fits:
hint:         x
</summary> 
  <description>
    Identifies the instrument or instruments used to make the observation, e.g., STScI.HST.WFPC2.
  </description>
</param>

<param> <summary>
name:          DateObs
datatype:      double
utype:         Image.DataObs
ucd:           VOX:Image_MJDateObs
fits:          DATE-OBS
hint:         x
</summary> 
  <description>
    Represents the mean modified Julian date of the observation. By "mean" we mean the midpoint of the observation in terms of normalized exposure times: this is the "characteristic observation time" and is independent of observation duration.
  </description>
</param>

<param> <summary>
name:          RA
datatype:      double
utype:         Image.RightAscension
ucd:           POS_EQ_RA_MAIN
fits:
hint:         x
</summary> 
  <description>
    Required. Represents the ICRS right-ascension of the center of the image.
  </description>
</param>

<param> <summary>
name:          DECL
datatype:      double
utype:         Image.Declination
ucd:           POS_EQ_DEC_MAIN
fits:
hint:         x
</summary> 
  <description>
    Required. Represents the ICRS declination of the center of the image.
  </description>
</param>

<param> <summary>
name:          Naxes
datatype:      int
utype:         Image.Naxes
ucd:           VOX:Image_Naxes
fits:
hint:         x
</summary> 
  <description>
    Required. Specifies the number of image axes.
  </description>
</param>

<param> <summary>
name:          Naxis
datatype:      int
arraysize:     *
utype:         Image.Naxis
ucd:           VOX:Image_Naxis
fits:
hint:         x
</summary> 
  <description>
    Required. Array value giving the length in pixels of each image axis.
  </description>
</param>

<param> <summary>
name:          Scale
datatype:      double
arraysize:     *
utype:         Image.Scale
ucd:           VOX:Image_Scale
fits:
hint:         x
</summary> 
  <description>
    Required. Array value giving the scale in degrees per pixel of each image axis.
  </description>
</param>

<param> <summary>
name:          Format
datatype:      char
arraysize:     *
utype:         Access.Format
ucd:           VOX:Image_Naxes
fits:
hint:         x
</summary> 
  <description>
    Required. Specifies the MIME-type of the object associated with the image acref, e.g., "image/fits", "text/html", and so forth.
  </description>
</param>



<!-- ===================================================================
  Coordinate System Metadata
  =================================================================== -->

<param> <summary>
name:          CoordRefFrame
datatype:      char
arraysize:     *
utype:         Image.WCS.CoordRefFrame
ucd:           VOX:STC_CoordRefFrame
fits:
hint:         x
</summary> 
  <description>
    Represents the coordinate system reference frame, selected from "ICRS", "FK5", "FK4", "ECL", "GAL", and "SGAL".
  </description>
</param>

<param> <summary>
name:          CoordEquinox
datatype:      double
utype:         Image.WCS.CoordEquinox
ucd:           VOX:STC_CoordEquinox
fits:          EQUINOX
hint:         x
</summary> 
  <description>
    Optional. Represents the Equinox (not required for ICRS) of the coordinate system used for the image world coordinate system (WCS).	This should match whatever is in the image WCS and may differ from the default ICRS coordinates used elsewhere.
  </description>
</param>

<param> <summary>
name:          CoordProjection
datatype:      char
arraysize:     3
utype:         Image.WCS.CoordProjection
ucd:           VOX:WCS_CoordProjection
fits:
hint:         x
</summary> 
  <description>
    The array value is the three-character code ("TAN", "ARC", "SIN", and so forth) specifying the celestial projection, as for FITS WCS.
  </description>
</param>

<param> <summary>
name:          CoordRefPixel
datatype:      double
arraysize:     *
utype:         Image.WCS.CoordRefPixel
ucd:           VOX:WCS_CoordRefPixel
fits:
hint:         x
</summary> 
  <description>
    The array value specifies the image pixel coordinates of the WCS reference pixel. This is identical to "CRPIX" in FITS WCS.
  </description>
</param>

<param> <summary>
name:          CoordRefValue
datatype:      double
arraysize:     *
utype:         Image.WCS.CoordRefValue
ucd:           VOX:WCS_CoordRefValue
fits:
hint:         x
</summary> 
  <description>
    The array value specifies the world coordinates of the WCS reference pixel. This is identical to	"CRVAL" in FITS WCS.
  </description>
</param>

<param> <summary>
name:          CoordCDMatrix
datatype:      double
arraysize:     *
utype:         Image.WCS.CoordCDMatrix
ucd:           VOX:WCS_CDMatrix
fits:
hint:         x
</summary> 
  <description>
    The array (matrix) value specifies the WCS CD matrix. This is identical to the "CD" term in FITS WCS, and defines the scale and rotation (among other things) of the image. Matrix elements should be ordered as CD[i,j] = [1,1], [1,2], [2,1], [2,2].
  </description>
</param>


<!-- ===================================================================
  Spectral Bandpass Metadata
  =================================================================== 

<param> <summary>
name: BandPass_ID
datatype:      char
arraysize:     *
utype:         
ucd:           VOX:BandPass_ID
fits:
hint:         x
</summary> 
  <description>
    Identifies the bandpass by name (e.g., "V", "SDSS_U", "K", "K-Band", etc.).
  </description>
</param>

<param> <summary>
name: BandPass_Unit
datatype:      char
arraysize:     *
utype:         
ucd:           VOX:BandPass_Unit
fits:
hint:         x
</summary> 
  <description>
    Identifies the units used to represent spectral values, selected from "meters", "hertz", and "keV". No other units are permitted here; the client application may of course present a wider range of units in the user interface.
  </description>
</param>

<param> <summary>
name: BandPass_RefValue
datatype:      double
utype:         
ucd:           VOX:BandPass_RefValue
fits:
hint:         x
</summary> 
  <description>
    Specifies the characteristic (reference) frequency, wavelength, or energy for the bandpass model.
  </description>
</param>

<param> <summary>
name: BandPass_HiLimit
datatype:      double
utype:         
ucd:           VOX:BandPass_HiLimit
fits:
hint:         x
</summary> 
  <description>
    Specifies the upper limit of the bandpass.
  </description>
</param>

<param> <summary>
name: BandPass_LoLimit
datatype:      double
utype:         
ucd:           VOX:BandPass_LoLimit
fits:
hint:         x
</summary> 
  <description>
    Specifies the lower limit of the bandpass.
  </description>
</param> -->

<!-- ===================================================================
  Processing Metadata
  =================================================================== -->

<param> <summary>
name: PixFlags
datatype:      char
arraysize:     *
utype:         
ucd:           VOX:Image_PixFlags
fits:
hint:         x
</summary> 
  <description>
    specifying the type of processing done by the image service to produce an output image pixel.	The string value should be formed from some combination of the following character codes:
    C -- The image pixels were copied from a source image without change, as when an atlas image or cutout is returned.
    F -- The image pixels were computed by resampling an existing image, e.g., to rescale or reproject the data, and were filtered by an interpolator.
    X -- The image pixels were computed by the service directly from a primary data set hence were not filtered by an interpolator.
    Z -- The image pixels contain valid flux (intensity) values, e.g., if the pixels were resampled a flux-preserving interpolator was used.
    V -- The image pixels contain some unspecified visualization of the data, hence are suitable for display but not for numerical analysis.
    For example, a typical image cutout service would have PixFlags="C", whereas a mosaicing service operating on precomputed images might have PixFlags="FZ". A preview page, graphics image, or a pixel mask might have PixFlags="V". An image produced by sampling and reprojecting a high energy event list might have PixFlags="X". If not specified, PixFlags="C" is assumed.
  </description>
</param>

<!-- ===================================================================
  Access Metadata
  =================================================================== -->

<param> <summary>
name:          AcRef
datatype:      char
arraysize:     *
utype:         Access.Reference
ucd:           VOX:Image_AccessReference
fits:
hint:         x
</summary> 
  <description>
    Required. Specifies the URL to be used to access or retrieve the image.	Since the URL may contain XML metacharacters the URL is can be enclosed in an XML CDATA section (<![CDATA[...]]>) or otherwise URL encoded (see URI Specification) to escape any embedded metacharacters.
    It is possible and permissible for an image query to reference an image which cannot be accessed, e.g., because the image metadata is available online but the image itself is not. In this case the access reference value should be given as "NONE", without a CDATA enclosure.

Since SIA is a URL-based interface the access reference is a simple URL. If the client issues a HTTP GET request using this URL, and the request is successful, the client will receive a VOX:Image_Format document in return. In most cases this will be an image with a MIME-type such as "image/fits", but if the image reference points to a preview page, the document type could be "text/html". Note: the access reference URL does not stage the data and return another image reference, it returns the image itself as the response to the GET.

The access reference URL need not point to an actual existing online image. In many cases the URL will reference a virtual image, which will be created on-the-fly by the image service when accessed.

Image access references (acrefs) are strings which uniquely identify a (possibly virtual) image within the global name space of the Web. Acref strings are used like file pathnames to tag or index images, hence should be static in nature (meaning the string should be computed once by the service and thereafter merely copied about).	Acrefs can be passed about among cooperating hosts in a distributed computing scenario, hence should access the same image regardless of the address of the client.	An acref is a runtime image reference, generated by the image service at query time, and may be invalid after an interval of time (e.g., hours or days), as defined by the service.
  </description>
</param>

<param> <summary>
name:          AccessRefTTL
datatype:      int
utype:         Access.TimeToLive
ucd:           VOX:Image_AccessRefTTL
fits:
hint:         x
</summary> 
  <description>
    Optional. Specifies the minimum time to live in seconds of the access reference.
  </description>
</param>

<param> <summary>
name:          DatasetSize
datatype:      int
utype:         Access.Size
ucd:           VOX:Image_FileSize
fits:
hint:         x
</summary> 
  <description>
    Represents the actual or estimated size of the encoded image in bytes (not pixels!). This is useful for image selection and for optimizing distributed computations.
  </description>
</param>

</keywords>
