/*
 * File: app/view/uploadOptionsForm.js
 * Date: Wed Aug 31 2011 13:49:10 GMT-0400 (Eastern Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */
Ext.require('Mvp.util.Uploader');

Ext.define('Mvpd.view.uploadOptionsForm', {
    extend: 'Mvpd.view.ui.uploadOptionsForm',

    initComponent: function () {
        var me = this;
        me.callParent(arguments);

        var temp = me.query('#viewSavedDataRadio');
        me.viewSavedDataRadio = me.query('#viewSavedDataRadio')[0];
        me.convertFileFormatRadio = me.query('#convertFileFormatRadio')[0];
        me.uploadToServerRadio = me.query('#uploadToServerRadio')[0];
        me.searchTargetsRadio = me.query('#searchTargetsRadio')[0];
        me.actionRadioGroup = me.query('#actionRadioGroup')[0];

        me.fromFilePanel = me.query('#fromFilePanel')[0];
        me.fromCSVRadio = me.query('#fromCSVRadio')[0];
        me.fromVOTRadio = me.query('#fromVOTRadio')[0];
        me.fromTSVRadio = me.query('#fromTSVRadio')[0];
        me.fromRadioGroup = me.query('#fromRadioGroup')[0];

        me.toFilePanel = me.query('#toFilePanel')[0];
        me.toRadioGroup = me.query('#toRadioGroup')[0];

        me.toCSVRadio = me.query('#toCSVRadio')[0];
        me.toVOTRadio = me.query('#toVOTRadio')[0];
        me.toTSVRadio = me.query('#toTSVRadio')[0];
        me.toXLSRadio = me.query('#toXLSRadio')[0];
        me.toHTMLRadio = me.query('#toHTMLRadio')[0];
        me.toXMLRadio = me.query('#toXMLRadio')[0];

        me.actionRadioGroup.on('change', me.toggleToPanel, this);
        me.viewSavedDataRadio.setValue(true);

        me.fromRadioGroup.on('change', me.toggleRadioEnable, this);
        me.fromCSVRadio.setValue(true);

        me.fileField = Ext.create('Ext.form.field.File', {
                border: 10,
                id: 'form-file',
                size: 50,
                emptyText: 'Select a file',
                name: 'file-path',
                buttonText: '...'
            })
        var fileUploadPanel = Ext.create('Ext.form.Panel', {
            fileUpload: true,
            border: 10,
            layout: 'hbox',
            itemId: 'fileUploadPanel',
            items: [me.fileField,
            {
                xtype: 'button',
                border: 10,
                id: 'uploadButton',
                text: 'Upload',
                handler: me.uploadFile,
                scope: this
            }]
        });

        me.add(fileUploadPanel);
        me.fileUploadPanel = me.query('#fileUploadPanel')[0];

    },
    toggleToPanel: function () {
        var toggle = this.convertFileFormatRadio.getValue();
        if (toggle) {
            this.toFilePanel.enable();
        }
        else {
            this.toFilePanel.disable();
        }
        if (this.uploadToServerRadio.getValue()) {
            this.fromFilePanel.disable()
        }
        else {
            this.fromFilePanel.enable();
        }
    },

    toggleRadioEnable: function () {
        this.toCSVRadio.enable();
        this.toVOTRadio.enable();
        this.toTSVRadio.enable();
        this.toXLSRadio.enable();
        this.toHTMLRadio.enable();
        this.toXMLRadio.enable();

        if (this.fromCSVRadio.getValue()) {
            this.toCSVRadio.disable();
            this.toCSVRadio.setValue(false);
        }
        else if (this.fromVOTRadio.getValue()) {
            this.toVOTRadio.disable();
            this.toVOTRadio.setValue(false);
        }
        else if (this.fromTSVRadio.getValue()) {
            this.toTSVRadio.disable();
            this.toTSVRadio.setValue(false);
        }
    },

    uploadFile: function () {
        var f = this.fileUploadPanel.getForm();
        var uploader = Mvp.util.Uploader;
        var cbScope = this;
        if (this.uploadToServerRadio.getValue()) {
            uploader.uploadFile(f, this.basicUploadCallback, cbScope);
        } else if (this.viewSavedDataRadio.getValue()) {
            uploader.uploadFile(f, this.viewSavedCallback, cbScope);
        }
    },
    
    basicUploadCallback: function (f, action) {
        var result = Ext.decode(action.response.responseText);
        var url = result.data;
        
    },
    
    viewSavedCallback: function (f, action) {
        var result = Ext.decode(action.response.responseText);
        var url = result.data;
        var fullPath = this.fileField.getValue();
        if (this.fromCSVRadio.getValue()) {
            this.portalScope.loadCsvFile(url, fullPath);
        } else if (this.fromVOTRadio.getValue()) {
            this.portalScope.searchVoTable(url, fullPath);
        }
        
    }
});