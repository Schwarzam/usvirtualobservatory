/*
 * File: app/view/ColorPickerContainer.js
 * Date: Mon Oct 31 2011 10:26:28 GMT-0400 (Eastern Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.2.
 * http://www.sencha.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

Ext.define('Mvpc.view.ColorPickerContainer', {
    extend: 'Mvpc.view.ui.ColorPickerContainer',

    initComponent: function () {
        var me = this;
        me.callParent(arguments);
        this.selectedColor = 'FF6600';
        var colorPicker = Ext.create('Ext.picker.Color', {
            value: this.selectedColor,
            handler: this.setColor,
            scope: this
        });
        colorPicker.addListener('select', this.colorChanged, this);
        var pos = [600, 150];       // want to use this.getPosition() but it doesn't work
        this.pickerWindow = Ext.create('Ext.window.Window', {
            height: 100,
            width: 100,
            modal: true,
            x: pos[0],
            y: pos[1],
            closeAction: 'hide',    // want the container to remember its state instead of reproducing it
            items: [colorPicker]
        });
        var pickerButton = this.getComponent('pickerButton')
        pickerButton.addListener('click', this.openColorPicker, this);
        pickerButton.setTooltip('Palette');
        this.on('afterLayout', function() { this.setColor(null, this.selectedColor); }, this);  // initialize swatch
    },

    openColorPicker: function () {
        this.pickerWindow.show();
    },

    getColor: function () {
        return this.selectedColor;
    },

    setColor: function (picker, color) {
        this.selectedColor = color;
        this.pickerWindow.hide();
        var colorSwatch = this.getComponent('colorSwatch');
        var html = '<span width=20 style="background-color:#' + this.getColor() + '">&nbsp; &nbsp;</span>';
        var swatch = Ext.create('Ext.container.Container', {        // terrible way of making a small colored rectangle but otherwise style sheets just override everything
            html: html,
            margin: '4 0 0 1'
        });
        colorSwatch.removeAll();
        colorSwatch.add(swatch);
    },
    
    colorChanged: function(picker, selColor) {
        this.fireEvent('colorChanged', picker, selColor);
    }
});