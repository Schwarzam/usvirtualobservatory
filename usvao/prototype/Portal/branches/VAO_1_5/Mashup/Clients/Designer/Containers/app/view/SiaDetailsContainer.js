/*
 * File: app/view/DatascopeDetailsContainer.js
 * Date: Tue Sep 20 2011 12:05:21 GMT-0400 (Eastern Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

Ext.define('Mvpc.view.SiaDetailsContainer', {
    requires: ['Mvp.util.SearchBox', 'Mvp.util.SampManager', 'Mvp.util.TableUtils', 'Mvpc.view.GenericDetailsContainer', 'Mvp.util.Util'],
    extend: 'Mvpc.view.ui.SiaDetailsContainer',

    initComponent: function () {
        var me = this;
        me.callParent(arguments);
    },

    constructor: function (config) {
        this.callParent(arguments);    //set up basic Container class variables
        var record = config.record;
        var updateObject = config.controller.getLastUpdateObject();
        this.columns = updateObject.columnInfo.columns;

        var toolbar = this.getComponent('summaryPanel').getComponent('detailsToolbar');

        this.downloadButton = toolbar.getComponent('downloadButton');
        this.downloadButton.setHandler(this.downloadRecords, this);

        var sampBroadcast = toolbar.getComponent('sampBroadcast');
        sampBroadcast.setHandler(this.broadcastImage, this);

        var summaryContainer = this.getComponent('summaryPanel').getComponent('summaryContainer');

        var title = summaryContainer.getComponent('imageTitle');
        var titleColumn = Mvp.util.TableUtils.getColumnNameByUCD(this.columns, /VOX\:Image_Title/);
        title.setValue(this.record.get(titleColumn));

        var type = summaryContainer.getComponent('imageFormat');
        var typeColumn = Mvp.util.TableUtils.getColumnNameByUCD(this.columns, /VOX\:Image_Format/);
        var typeValue = this.record.get(typeColumn);
        type.setValue(typeValue);
        if( ! typeValue.match(/fits/i) ){
            sampBroadcast.disable();
            sampBroadcast.setTooltip('Can Only Broadcast FITS Images to SAMP');
        }

        var fovBox = summaryContainer.getComponent('fieldOfView');

        var ra = fovBox.getComponent('centerRa');
        var raColumn = Mvp.util.TableUtils.getColumnNameByUCD(this.columns, /POS_EQ_RA_MAIN/);
        var raValue = this.record.get(raColumn);
        ra.setValue(Ext.util.Format.number(raValue, '0.000000'));

        var dec = fovBox.getComponent('centerDec');
        var decColumn = Mvp.util.TableUtils.getColumnNameByUCD(this.columns, /POS_EQ_DEC_MAIN/);
        var decValue = this.record.get(decColumn);
        dec.setValue(Ext.util.Format.number(decValue, '0.000000'));

        // Though the VOTable standard seems to indicate that array elements should be
        // separated by spaces, there are some implementations that use commas.

        var extents = Mvp.util.TableUtils.getSiaExtent(this.columns, this.record);
        var extent = fovBox.getComponent('imageExtent');
        extent.setValue(extents[0] + ' X ' + extents[1]);

        // dump contents into lower panel
        var detailsPanel = this.getComponent('detailsPanel');
        var c = Ext.create('Mvpc.view.GenericDetailsContainer', { record: record, controller: config.controller });
        detailsPanel.add(c);
    },

    downloadRecords: function () {
        // alert("Image name: " + this.makeImageName());
        var urlColumn = Mvp.util.TableUtils.getColumnNameByUCD(this.columns, /VOX\:Image_AccessReference/);
        var url = this.record.get(urlColumn);
        (Mvp.util.Util.isFtpUrl(url)) ? Mvp.util.Exporter.download(url) : Mvp.util.Exporter.downloadUrl(this.record.get(urlColumn), this.makeImageName());
    },

    broadcastImage: function () {
        var urlColumn = Mvp.util.TableUtils.getColumnNameByUCD(this.columns, /VOX\:Image_AccessReference/);
        Mvp.util.SampManager.sendImage(this.record.get(urlColumn), this.makeImageName());
    },

    makeImageName: function () {
        var imageName = this.controller.getTitle();

        var instrumentColumn = Mvp.util.TableUtils.getColumnNameByUCD(this.columns, /INST_ID/);
        if (instrumentColumn != null) {
            var instrumentTitle = this.record.get(instrumentColumn);
            imageName = instrumentTitle + '_' + imageName;
        }

        var titleColumn = Mvp.util.TableUtils.getColumnNameByUCD(this.columns, /VOX\:Image_Title/);
        var imageTitle = this.record.get(titleColumn);
        imageName = imageTitle + '_' + imageName;

        var typeColumn = Mvp.util.TableUtils.getColumnNameByUCD(this.columns, /VOX\:Image_Format/);
        var type = this.record.get(typeColumn);
        var index = type.indexOf('/');
        if (index >= 0) {
            type = type.substring(index + 1);
        }

        return Mvp.util.Util.filenameCreator(imageName, type);
    }
});