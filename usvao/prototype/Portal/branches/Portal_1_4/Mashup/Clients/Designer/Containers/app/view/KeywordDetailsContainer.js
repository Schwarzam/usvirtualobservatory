/*
* File: app/view/CaomDetailsContainer.js
* Date: Thu Sep 22 2011 10:18:01 GMT-0400 (Eastern Daylight Time)
*
* This file was generated by Ext Designer version 1.2.0.
* http://www.sencha.com/products/designer/
*
* This file will be generated the first time you export.
*
* You should implement event handling and custom methods in this
* class.
*/

Ext.define('Mvpc.view.KeywordDetailsContainer', {
    requires: ['Mvpc.view.GenericDetailsContainer', Mvp.util.Util],
    extend: 'Mvpc.view.ui.KeywordDetailsContainer',

    initComponent: function () {
        var me = this;
        me.callParent(arguments);
    },

    constructor: function (config) {
        this.callParent(arguments);    //set up basic Container class variables

        var summaryPanel = this.getComponent('summaryPanel'),
            detailsPanel = this.getComponent('detailsPanel');
        var titleContainer = summaryPanel.getComponent('titleContainer'),
            summaryContainer = summaryPanel.getComponent('summaryContainer');

        var record = config.record;
        var title = record.get('title'),
            bibcode = record.get('bibcode'),
            bibcodehyperlink = Mvp.util.Util.createLink('http://adsabs.harvard.edu/abs/' + bibcode, bibcode),
            journal = record.get('journal'),
            publication_date = record.get('publication_date'),
            abstractVal = record.get('abstract');
        var keywords = record.get('keywordList').split('|');

        var urls = new Array(keywords.length);
        for (i = 0; i < keywords.length; i++) {
            urls[i] = Ext.create('Ext.button.Button', {
                itemId: 'keywordsButton' + i,
                text: keywords[i],
                tooltip: 'Search for publications containing this keyword&nbsp;',
                scope: this.portal,
                shadow: true,
                style: 'border: 1px solid #000000;' // The 'border' config has no effect, overriding the toolbar button style is a pain
            });
            urls[i].on('click', this.searchKeywords, this, { keyword: keywords[i] });
        }

        var titleLabel = {
            xtype: 'label',
            itemId: 'targetLabel',
            html: '<center><h1>' + title + '</h1></center><br/><br/>',
            width: 350
        },
        bibcodeLabel = {
            xtype: 'label',
            itemId: 'bibcodeLabel',
            html: 'Bibcode: ' + bibcodehyperlink
        },
        journalLabel = {
            xtype: 'label',
            itemId: 'journalLabel',
            width: 350,
            html: 'Journal: ' + journal
        },
        publicationLabel = {
            xtype: 'label',
            itemId: 'publicationLabel',
            html: 'Publication Date: ' + publication_date + '<br/>&nbsp;'
        },
        keywordsFieldSet = {
            xtype: 'fieldset',
            itemId: 'keywordsFieldSet',
            title: 'Keywords (click for a new search): ',
            layout: 'vbox',
            width: 350,
            items: urls
        },
        abstractLabel = {
            xtype: 'label',
            itemId: 'abstractLabel',
            width: 350,
            html: '<br />' + abstractVal + '<br />&nbsp; <br />'
        };

        titleContainer.add(titleLabel);
        summaryContainer.add([bibcodeLabel, journalLabel, publicationLabel, keywordsFieldSet, abstractLabel]);
        detailsPanel.add(Ext.create('Mvpc.view.GenericDetailsContainer', { record: record, controller: config.controller }));
    },
    searchKeywords: function (button, event, config) {
        var args = {
            inputText: config.keyword,
            key: config.keyword,
            description: 'Literature by Keyword: ' + config.keyword
        };
        var searchParams = Mvp.search.SearchParams.getSearch('LIT');
        Mvp.gui.DetailsWindow.closeDetailsWindow();
        this.controller.invokeSearch(args, searchParams);
    }

});