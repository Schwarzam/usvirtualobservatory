/*
 * File: app/view/CaomDetailsContainer.js
 * Date: Thu Sep 22 2011 10:18:01 GMT-0400 (Eastern Daylight Time)
 *
 * This file was generated by Ext Designer version 1.2.0.
 * http://www.sencha.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */
Ext.require('Mvp.util.Util');
Ext.require('Mvp.custom.Caom');

Ext.define('Mvpc.view.CaomDetailsContainer', {
    extend: 'Mvpc.view.ui.CaomDetailsContainer',

    initComponent: function () {
        var me = this;
        me.callParent(arguments);
    },

    constructor: function (config) {
        this.callParent(arguments);    //set up basic Container class variables

        var record = config.record;
        var collection = record.get('obs_collection'),
            target = record.get('target_name'),
            publisher = record.get('publisher_id'),
            obsId = record.get('obs_id'),
            proposal_pi = record.get('proposal_pi'),
            instrument = record.get('instrument'),
            urls = Mvp.custom.Caom.simplePreviewGenerator(record, 256, 256);
        var url = urls[0],
            imageLink = urls[1];
        var hyperlink = Mvp.util.Util.createLinkIf(url, 'Interactive Display'),
            targetHTML = '<center><h1>' + target + '</h1></center>',
            summaryPanel = this.getComponent('summaryPanel'),
            detailsPanel = this.getComponent('detailsPanel'),
            hyperlink2 = null, url2;
        if (collection == 'HLA') {
            url2 = 'http://hla.stsci.edu//cgi-bin/moreinfo.cgi?html=1&dataset=' + obsId + '&filename=' + obsId + '&detector=' + instrument + '&target=' + target;
            hyperlink2 = Mvp.util.Util.createLinkIf(url2, 'More...')
        }
        var titleContainer = summaryPanel.getComponent('titleContainer'),
            imageContainer = summaryPanel.getComponent('imageContainer'),
            summaryContainer = summaryPanel.getComponent('summaryContainer');
        var targetLabel = {
            xtype: 'label',
            itemId: 'targetLabel',
            html: targetHTML
        },
            imageLabel = {
                xtype: 'label',
                itemId: 'imageLabel',
                html: '<center>' + imageLink + '</center>',
                width: (imageLink.match(/<img/)) ? null : 300
            },
            publisherLabel = {
                xtype: 'label',
                itemId: 'publisherLabel',
                text: 'Publisher: ' + publisher
            },
            collectionLabel = {
                xtype: 'label',
                itemId: 'collectionLabel',
                text: 'Collection: ' + collection
            },
            instrumentLabel = {
                xtype: 'label',
                itemId: 'instrumentLabel',
                text: 'Instrument: ' + instrument
            },
            obsIdLabel = {
                xtype: 'label',
                itemId: 'obsIdLabel',
                text: 'Obs ID: ' + obsId
            },
            piLabel = {
                xtype: 'label',
                itemId: 'piLabel',
                hidden: proposal_pi == '',
                text: 'Proposal PI: ' + proposal_pi
            },
            adsSearch = Ext.create('Ext.button.Button', {
                itemId: 'adsButton',
                text: 'Search for Publications',
                tooltip: 'Search for Publications authored by this proposal PI&nbsp;',
                scope: this.portal,
                shadow: true,
                hidden: proposal_pi == '',
                style: 'border: 1px solid #000000;' // The 'border' config has no effect, overriding the toolbar button style is a pain

            }),
            urlLabel = {
                xtype: 'label',
                itemId: 'urlLabel',
                html: hyperlink
            },
            moreLabel = {
                xtype: 'label',
                itemId: 'moreLabel',
                html: hyperlink2
            };
        adsSearch.on('click', this.searchAdsAuthor, this, { author: proposal_pi });

        titleContainer.add(targetLabel);
        imageContainer.add(imageLabel);
        summaryContainer.add([publisherLabel, collectionLabel, instrumentLabel, obsIdLabel, piLabel, adsSearch, urlLabel]);
        if (url2) summaryContainer.add(moreLabel);
        detailsPanel.add(Ext.create('Mvpc.view.GenericDetailsContainer', { record: record, controller: config.controller }));
    },

    searchAdsAuthor: function (button, event, config) {
        var args = {
            inputText: config.author,
            author: config.author,
            title: config.author,
            description: 'Publications by Author: ' + config.author
        };
        var searchParams = Mvp.search.SearchParams.getSearch('ADS');
        Mvp.gui.DetailsWindow.closeDetailsWindow();
        this.controller.invokeSearch(args, searchParams);
    }
});