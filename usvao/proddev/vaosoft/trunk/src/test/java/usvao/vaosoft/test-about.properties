about.version: 1.0

name: vaosoft
# org: usvao   # default=usvao
description:  The VAO software development environment

# build.type: build mechanism type:  ant maven gnumake unpack
build.type:  ant

# Look for evidence that this has been installed
#
# Set this to the name of an environment variable that might be set 
# indicating where it is installed.  [name]_HOME will be checked 
# after checking here.
#
# build.install.evidence.env:  

# Set this to an explicit directory where it might typically be installed 
# but which would not naturally be found by the OS (e.g. when linking 
# against it.  $VAO_HOME/sw/[name]/[ver] will be check after checking here.
#
# build.install.evidence.swdir: 

# Set one of more of the following to a file path that, if it exists, indicates
# that the product is installed in an OS-standard place--i.e. such that it 
# can be found naturally (e.g. when linking against it).  For each additional
# path added (e.g. for different OS platforms), replace the number field to a 
# unique value. 
#
# build.install.evidence.stddirfile.1: 

# Set one or more of the following to a pair of values such that if a file 
# given by the 2nd field is found relative to a directory given in the first 
# field, then the product can be assumed to be installed under the directory 
# given by the first field.  For each additional path added (e.g. for 
# different OS platforms), replace the number field to a unique value. 
#
# build.install.evidence.dirfile.1:  /opt lib/libprod.a

# The following is only needed in lieu of an explicit ivy.xml file.

# Describe the versions of the product dependencies needed.
# Format:
#          .prod-key    org         name        version constraint
#          --------------------------------------------------------
dep.product.ant:        apache      ant         1.8.+
dep.product.antcontrib: ant-contrib ant-contrib 1.0b3
dep.product.ivy:        apache      ivy         2.2.+
dep.product.maven:      apache      maven       3.0.+
dep.product.commonscli: common      cli         1.2

# Now describe the contexts in which these dependencies are needed.
# This is done via "dep.for.*" elements.  (This is a way to express 
# Ivy configuration mappings.)  The form of these property
# settings is:
#
#   dep.for.[context].[prod-key]:  [dep-context]
#
# where [context] is a name for a particular use context ("configuration",
# in Ivy-speak) for the product this file is about.  [prod-key] is the 
# label used above (in dep.product.*).  [dep-context] is the context 
# for the dependency product.  Read this as "When we want to apply the 
# [context] context to our product, we need all artifacts of [prod-key]
# defined for its [dep-context] context."  [dep-context] may be given as 
# a comma-separated list of context names.  
#
# A second form can be helpful to avoid excessive repeat definitions:
#
#   dep.for.[context1]._extends:  [context2]
#
# This will cause [context1] context to inherit all of the mappings 
# of defined for [context2].  [context2] may be given as a comma-separated 
# list of context names.  
#
# any context name can be defined by adding an appropriate set of 
# dep.for.*.* entries; however, it is recommended that any/all the following
# standard contexts that are appropriate to the current product be provided:
#   install:  for prequrisites needed to install the current product
#   package:  for dependencies needed to create standarad distributable bundles
#               from an SVN export of this product
#   build:    for dependencies needed to build the current product
#   run:      for dependencies needed to run the current product
#   license:  the collection of licenses to include when bundling other 
#               products
# 
# Two automatically defined contexts do *not* need configuring in this file:
#   uberinstall: a special context for installing products causes
#                  a check for an existing installation before actually 
#                  installing.
#   null:        a get-nothing context
#
# A few additional contexts are helpful for collecting common contexts
# in conjuction with the _extends mechanism above:
#   jardeps:      the jar dependencies needed for jar-only runtime use of 
#                   this product
#   installdeps:  products that need to be installed somewhere in order to 
#                   fully use this product in runtime
#   pkglicenses:  the licenses of dependent products to be bundled (i.e.
#                   excluding the current product's license).  

# Indicate the jar file dependencies 
dep.for.jardeps.antcontrib: jar
dep.for.jardeps.ivy:        jar
dep.for.jardeps.commonscli: jar

# Indicate the product dependencies that require full installation
dep.for.installdeps.ant:    uberinstall
dep.for.installdeps.maven:  uberinstall

# Indicate the artifacts needed for jar-only runtime use of this product
# (Note: ownjars is defined as artifact configuration below)
dep.for.jar._extends:       installdeps,jardeps,ownjars

# Indicate the prerequisites for instlaling this package
dep.for.install._extends:   installdeps,jardeps

# Indicate the artifacts to be bundled with a distribution bundle
dep.for.package.ant:        distrib
dep.for.package._extends:   installdeps,jardeps,pkglicense

# Indicate what forms of the dependencies are needed for building 
# this product.  
dep.for.build.ant:          uberinstall
dep.for.build._extends:     jardeps

# Indicate what forms of the dependencies are needed for testing
# this product.  
dep.for.test._extends:      build

# Indicate what forms of the dependencies are needed for running
# this product.  
dep.for.run._extends:       installdeps,jardeps

# Indicate what licenses should be included in a distribution bundle
dep.for.pkglicense.ant:        license
dep.for.pkglicense.antcontrib: license
dep.for.pkglicense.ivy:        license
dep.for.pkglicense.commonscli: license

dep.for.license._extends:      pkglicense

# Now we describe the artifacts that will be provided by this product

art.defaultName:  usvao-vaosoft
art.defaultFile:  [name]-[rev]-[type].[ext]

#       artifact label      type      extension   basename       
#----------------------------------------------------------------
art.for.license:            LICENSE   txt      
art.for.distrib-src-tgz:    src       tar.gz   
art.for.distrib-src-zip:    src       zip      
art.for.distrib-bin-tgz:    bin       tar.gz   
art.for.distrib-bin-zip:    bin       zip      
art.for.ownjars.1:          jar       jar

art.filenamePattern.distrib-src-tgz:  [name]-[rev].[ext]
art.filenamePattern.distrib-src-zip:  [name]-[rev].[ext]
art.filenamePattern.ownjars:          [name]-[rev].[ext]

# Indicate the prefered distribution bundle for uberinstall
dep.for.distrib._extends:  distrib-bin-zip


