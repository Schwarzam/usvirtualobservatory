[vaologin.auth]
statedir:  ./var
sessionsdir: %(statedir)s/VAOsessions
certdir: %(statedir)s/certificates
providerOpenID: https://sso.usvao.org/openid/id/
# VaoOpenidServer: http://wire.ncsa.uiuc.edu/openid/
# portalURLRealm: http://myserver.org/cgi-bin/restricted
caCertBundles: certs/ca_e33418d1/e33418d1.0 certs/ca-certificates.crt, 

# uncomment this if you always want certain attributes to be required.
# Allowed values include username, name, email, institution, phone, and country.
#
# Note that if you use the portal module, username will always be required.
#
# requiredAttributes: username, email

[vaologin.portal]
# not specifying a directory disables sending static documents; keep a blank
# value to avoid messages in the error log
documentRoot: /var/www/html-authenticated
# docalias: 

# not specifying either of these disables the running of scripts; keep a blank
# value to avoid messages in the error log
scriptRoot:  /var/www/cgi-bin-authenticated
scriptAlias: /cgi-bin/
loginAlias: /login
# loginForwardUrl: /welcome.html
logoutAlias: /logout
# logoutForwardUrl: 
#
defaultDocument: /index.html
# protocolScheme: https
sessionLifehours: 8

# mimeTypeMapFile: /etc/mime.types
mimeTypeMap: text/plain txt asc, application/fits fits fits.gz

# if not specified, it defautls to vaologin.auth.portalurlrealm.  Specify 
# this if you want to deploy the loginstatus service; it must include the 
# cgi-bin area where the portal CGI script runs.  
cookieRealm: http://myserver.org/

# list the user attributes you would like to request by uncommenting
# requestAttributes below and removing the attributes you don't need.  If 
# you only need them when the user requests certain urls, list the paths
# in pathsNeedingAttributes.  (Note that paths listed there imply 
# forceAuthentication.)  If not set, the attributes will always be 
# requested whenever authentication is needed (and only then). 
# 
# requestAttributes: name, institution, phone, email, country
# pathsNeedingAttributes: /register

# list the paths that require a certificate.  These would normally be 
# cgi services that need to access other services on the users behalf.
# (Note that paths listed there imply forceAuthentication.)
#
# pathsNeedingCert: /shareData

# list the paths where you want to force an authentication check at 
# the identity server.  This does not necessarily mean that the user will 
# have to enter a username and password; it just means there will be a 
# round trip with the survery where user information (particularly 
# attributes) are updated. 
# 
# forceAuthentication: 

