--- pam_mysql-0.7RC1/pam_mysql.c	2006-01-09 04:35:59.000000000 -0600
+++ pam_mysql-0.7RC1-multiple-passwords/pam_mysql.c	2011-05-31 17:09:48.000000000 -0500
@@ -189,7 +189,8 @@
 	PAM_MYSQL_ERR_IO = 7,
 	PAM_MYSQL_ERR_SYNTAX = 8,
 	PAM_MYSQL_ERR_EOF = 9,
-	PAM_MYSQL_ERR_NOTIMPL = 10
+	PAM_MYSQL_ERR_NOTIMPL = 10,
+	PAM_MYSQL_ERR_MULTIPLE_MATCHES = 11
 };
 
 enum _pam_mysql_config_token_t {
@@ -231,6 +232,7 @@
 	int use_first_pass;
 	int try_first_pass;
 	int disconnect_every_op;
+	int allow_multiple_matches;
 	char *logtable;
 	char *logmsgcolumn;
 	char *logpidcolumn;
@@ -795,6 +797,7 @@
 	PAM_MYSQL_DEF_OPTION(use_first_pass, &pam_mysql_boolean_opt_accr),
 	PAM_MYSQL_DEF_OPTION(try_first_pass, &pam_mysql_boolean_opt_accr),
 	PAM_MYSQL_DEF_OPTION(disconnect_every_op, &pam_mysql_boolean_opt_accr),
+	PAM_MYSQL_DEF_OPTION(allow_multiple_matches, &pam_mysql_boolean_opt_accr),
 	PAM_MYSQL_DEF_OPTION2(debug, verbose, &pam_mysql_boolean_opt_accr),
 	{ NULL, 0, 0, NULL }
 };
@@ -1689,6 +1692,7 @@
 	PAM_MYSQL_DEF_OPTION2(log.time_column, logtimecolumn, &pam_mysql_string_opt_accr),
 	PAM_MYSQL_DEF_OPTION2(users.use_323_password, use_323_passwd, &pam_mysql_boolean_opt_accr),
 	PAM_MYSQL_DEF_OPTION2(users.disconnect_every_operation, disconnect_every_op, &pam_mysql_boolean_opt_accr),
+	PAM_MYSQL_DEF_OPTION2(users.allow_multiple_matches, allow_multiple_matches, &pam_mysql_boolean_opt_accr),
 	{ NULL, 0, 0, NULL }
 };
 
@@ -1961,6 +1965,7 @@
 	ctx->use_first_pass = 0;
 	ctx->try_first_pass = 1;
 	ctx->disconnect_every_op = 0;
+	ctx->allow_multiple_matches = 0;
 	ctx->logtable = NULL;
 	ctx->logmsgcolumn = NULL;
 	ctx->logpidcolumn = NULL;
@@ -2564,6 +2569,7 @@
 	MYSQL_RES *result = NULL;
 	MYSQL_ROW row;
 	int vresult;
+	int num_rows;
 
 	if (ctx->verbose) {
 		syslog(LOG_AUTHPRIV | LOG_ERR, PAM_MYSQL_LOG_PREFIX "pam_mysql_check_passwd() called.");
@@ -2606,108 +2612,109 @@
 		goto out;
 	}
 
-	switch (mysql_num_rows(result)) {
-		case 0:
-			syslog(LOG_AUTHPRIV | LOG_ERR, "%s", PAM_MYSQL_LOG_PREFIX "SELECT returned no result.");
-			err = PAM_MYSQL_ERR_NO_ENTRY;
-			goto out;
-
-		case 1:
-			break;
-
-		case 2:
-			syslog(LOG_AUTHPRIV | LOG_ERR, "%s", PAM_MYSQL_LOG_PREFIX "SELECT returned an indetermined result.");
-			err = PAM_MYSQL_ERR_UNKNOWN;
-			goto out;
-	}
-
-	/* Grab the password from RESULT_SET. */
-	if (NULL == (row = mysql_fetch_row(result))) {
-		err = PAM_MYSQL_ERR_DB;
+	num_rows = mysql_num_rows(result);
+	if (num_rows == 0) {
+		syslog(LOG_AUTHPRIV | LOG_ERR, "%s", PAM_MYSQL_LOG_PREFIX "SELECT returned no result.");
+		err = PAM_MYSQL_ERR_NO_ENTRY;
+		goto out;
+	} else if (num_rows > 1 && !ctx->allow_multiple_matches) {
+		syslog(LOG_AUTHPRIV | LOG_ERR, PAM_MYSQL_LOG_PREFIX "SELECT returned %d rows, but allow_multiple_matches is not enabled.", num_rows);
+		err = PAM_MYSQL_ERR_MULTIPLE_MATCHES;
 		goto out;
 	}
 
-	vresult = -1;
+	int i_row;
+	for (i_row = 0; i_row < num_rows; ++i_row) {
+		
+		/* Grab the password from RESULT_SET. */
+		if (NULL == (row = mysql_fetch_row(result))) {
+			err = PAM_MYSQL_ERR_DB;
+			goto out;
+		}
+
+		vresult = -1;
 
-	if (row[0] != NULL) {
-		if (passwd != NULL) {
-			switch (ctx->crypt_type) {
-				/* PLAIN */
-				case 0:
-					vresult = strcmp(row[0], passwd);
-					break;
+		if (row[0] != NULL) {
+			if (passwd != NULL) {
+				switch (ctx->crypt_type) {
+					/* PLAIN */
+					case 0:
+						vresult = strcmp(row[0], passwd);
+						break;
 
-				/* ENCRYPT */
-				case 1:
-					vresult = strcmp(row[0], crypt(passwd, row[0]));
-					if (errno) {
-						syslog(LOG_AUTHPRIV | LOG_ERR, PAM_MYSQL_LOG_PREFIX "something went wrong when invoking crypt() - %s", strerror(errno));
-					}
-					break;
+					/* ENCRYPT */
+					case 1:
+						vresult = strcmp(row[0], crypt(passwd, row[0]));
+						if (errno) {
+							syslog(LOG_AUTHPRIV | LOG_ERR, PAM_MYSQL_LOG_PREFIX "something went wrong when invoking crypt() - %s", strerror(errno));
+						}
+						break;
 
-				/* PASSWORD */
-				case 2: {
-					char buf[42];
-#ifdef HAVE_MAKE_SCRAMBLED_PASSWORD_323
-					if (ctx->use_323_passwd) {
-						make_scrambled_password_323(buf, passwd);
-					} else {
-						make_scrambled_password(buf, passwd);
-					}
+					/* PASSWORD */
+					case 2: {
+						char buf[42];
+	#ifdef HAVE_MAKE_SCRAMBLED_PASSWORD_323
+						if (ctx->use_323_passwd) {
+							make_scrambled_password_323(buf, passwd);
+						} else {
+							make_scrambled_password(buf, passwd);
+						}
 #else
-					make_scrambled_password(buf, passwd);
+						make_scrambled_password(buf, passwd);
 #endif
 
-					vresult = strcmp(row[0], buf);
-					{
-						char *p = buf - 1;
-						while (*(++p)) *p = '\0';
-					}
-				} break;
+						vresult = strcmp(row[0], buf);
+						{
+							char *p = buf - 1;
+							while (*(++p)) *p = '\0';
+						}
+					} break;
 
-				/* MD5 hash (not MD5 crypt()) */
-				case 3: {
+					/* MD5 hash (not MD5 crypt()) */
+					case 3: {
 #ifdef HAVE_PAM_MYSQL_MD5_DATA
-					char buf[33];
-					pam_mysql_md5_data((unsigned char*)passwd, strlen(passwd),
-							buf);
-					vresult = strcmp(row[0], buf);
-					{
-						char *p = buf - 1;
-						while (*(++p)) *p = '\0';
-					}
+						char buf[33];
+						pam_mysql_md5_data((unsigned char*)passwd, strlen(passwd),
+								buf);
+						vresult = strcmp(row[0], buf);
+						{
+							char *p = buf - 1;
+							while (*(++p)) *p = '\0';
+						}
 #else
-					syslog(LOG_AUTHPRIV | LOG_ERR, PAM_MYSQL_LOG_PREFIX "non-crypt()ish MD5 hash is not supported in this build.");
+						syslog(LOG_AUTHPRIV | LOG_ERR, PAM_MYSQL_LOG_PREFIX "non-crypt()ish MD5 hash is not supported in this build.");
 #endif
-				} break;
+					} break;
 
-				case 4: {
+					case 4: {
 #ifdef HAVE_PAM_MYSQL_SHA1_DATA
-					char buf[41];
-					pam_mysql_sha1_data((unsigned char*)passwd, strlen(passwd),
-							buf);
-					vresult = strcmp(row[0], buf);
-					{
-						char *p = buf - 1;
-						while (*(++p)) *p = '\0';
-					}
+						char buf[41];
+						pam_mysql_sha1_data((unsigned char*)passwd, strlen(passwd),
+								buf);
+						vresult = strcmp(row[0], buf);
+						{
+							char *p = buf - 1;
+							while (*(++p)) *p = '\0';
+						}
 #else
-					syslog(LOG_AUTHPRIV | LOG_ERR, PAM_MYSQL_LOG_PREFIX "non-crypt()ish SHA1 hash is not supported in this build.");
+						syslog(LOG_AUTHPRIV | LOG_ERR, PAM_MYSQL_LOG_PREFIX "non-crypt()ish SHA1 hash is not supported in this build.");
 #endif
-				} break;
+					} break;
 
-				default: {
+					default: {
+					}
 				}
 			}
+		} else {
+			vresult = null_inhibited;
 		}
-	} else {
-		vresult = null_inhibited;
-	}
 
-	if (vresult == 0) {
-		err = PAM_MYSQL_ERR_SUCCESS;
-	} else {
-		err = PAM_MYSQL_ERR_MISMATCH;
+		if (vresult == 0) {
+			err = PAM_MYSQL_ERR_SUCCESS;
+			goto out;
+		} else {
+			err = PAM_MYSQL_ERR_MISMATCH;
+		}
 	}
 
 out:
@@ -2937,6 +2944,7 @@
 	pam_mysql_str_t query;
 	MYSQL_RES *result = NULL;
 	MYSQL_ROW row;
+	int num_rows;
 
 	if (ctx->verbose) {
 		syslog(LOG_AUTHPRIV | LOG_ERR, PAM_MYSQL_LOG_PREFIX "pam_mysql_query_user_stat() called.");
@@ -2974,19 +2982,15 @@
 		goto out;
 	}
 
-	switch (mysql_num_rows(result)) {
-		case 0:
-			syslog(LOG_AUTHPRIV | LOG_ERR, "%s", PAM_MYSQL_LOG_PREFIX "SELECT returned no result.");
-			err = PAM_MYSQL_ERR_NO_ENTRY;
-			goto out;
-
-		case 1:
-			break;
-
-		case 2:
-			syslog(LOG_AUTHPRIV | LOG_ERR, "%s", PAM_MYSQL_LOG_PREFIX "SELECT returned an indetermined result.");
-			err = PAM_MYSQL_ERR_UNKNOWN;
-			goto out;
+	num_rows = mysql_num_rows(result);
+	if (num_rows == 0) {
+		syslog(LOG_AUTHPRIV | LOG_ERR, "%s", PAM_MYSQL_LOG_PREFIX "SELECT returned no result.");
+		err = PAM_MYSQL_ERR_NO_ENTRY;
+		goto out;
+	} else if (num_rows > 1 && !ctx->allow_multiple_matches) {
+		syslog(LOG_AUTHPRIV | LOG_ERR, PAM_MYSQL_LOG_PREFIX "SELECT returned %d rows, but allow_multiple_matches is not enabled.", num_rows);
+		err = PAM_MYSQL_ERR_MULTIPLE_MATCHES;
+		goto out;
 	}
 
 	if (NULL == (row = mysql_fetch_row(result))) {
