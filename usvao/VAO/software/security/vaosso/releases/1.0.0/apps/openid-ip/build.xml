<project name="openid-ip" basedir="." default="build">
  <!--
    - set inherit-properties to "false" if you do not want to inherit
    - properties from the enclosing package.  
    -->
  <property name="inherit-properties" value="build-inherit.properties"/>
  <property file="${inherit-properties}"/>

  <property file="build.properties"/>
  <property file="build.static.properties"/>

  <property name="dir.home" value="${basedir}" />
  <property name="dir.build" value="${basedir}/build" />
  <property name="dir.build.javadocs" value="${dir.build}/japi" />
  <property name="dir.build.classes" value="${dir.build}/classes" />
  <property name="dir.build.tclasses" value="${dir.build}/tclasses" />
  <property name="dir.build.lib" value="${dir.build}/lib" />
  <property name="dir.testreports" value="${dir.build}/test-reports" />
  <property name="dir.src" value="${basedir}/src/main" />
  <property name="dir.tsrc" value="${basedir}/src/test" />
  <property name="dir.etc" value="${basedir}/etc" />
  <property name="dir.web" value="${basedir}/web" />
  <property name="dir.lib" value="${basedir}/lib" />
  <property name="dir.jars" value="${dir.lib}" />

  <property name="webapp.name" value="openid" />
  <property name="jar.name" value="${webapp.name}-ip.jar" />
  <property name="jar.path" value="${dir.jars}/${jar.name}" />
  <property name="war.name" value="${webapp.name}.war" />
  <property name="war.path" value="${basedir}/${war.name}" />

  <property name="debug" value="true"/>
  <property name="deprecation" value="true"/>

  <path id="build.classpath">
    <pathelement location="${dir.build.classes}" />
    <fileset dir="${dir.jars}">
      <include name="**/*.jar"/>
      <exclude name="${jar.name}"/>
    </fileset>
    <pathelement location="${jar.servletapi}" />
  </path>

  <path id="test.classpath">
    <path refid="build.classpath"/>
    <pathelement location="${dir.build.tclasses}" />
  </path>

  <target name="build" depends="war"/>

  <target name="install" depends="build">
    <copy todir="${dir.install.lib}">
      <fileset file="${war.path}"/>
      <fileset file="${jar.path}"/>
    </copy>
  </target>

  <target name="init">
    <mkdir dir="${dir.build.classes}"/>
    <mkdir dir="${dir.build.tclasses}"/>
  </target>


  <!--
    -  create the runtime properties file
    -->
  <target name="hibernate-cfg" 
          depends="-set-hibernate-cfg,copy-hibernate-cfg,gen-hibernate-cfg"/>
  <target name="-set-hibernate-cfg" depends="init" unless="do.hibcfg.autogen">
    <condition property="do.hibcfg.autogen">
      <istrue value="${hibernate_cfg.autogen}" />
    </condition>
  </target>
  <target name="copy-hibernate-cfg" depends="init" unless="do.hibcfg.autogen">
    <delete file="${dir.build.classes}/hibernate.cfg.xml" />
    <copy file="${dir.etc}/hibernate.properties" todir="${dir.build.classes}"/>
  </target>
  <target name="gen-hibernate-cfg" depends="init" if="do.hibcfg.autogen">
    <property file="${dir.etc}/hibernate.properties"/>
    <mkdir dir="${dir.build.classes}/org/usvo/openid/orm"/>
    <echoproperties destfile="${dir.build.classes}/org/usvo/openid/orm/hibernate.properties">
      <propertyset>
        <propertyref prefix="hibernate."/>
      </propertyset>
    </echoproperties>
  </target>

  <target name="compile" depends="init,hibernate-cfg">
    <javac srcdir="${dir.src}" destdir="${dir.build.classes}" debug="${debug}"
           deprecation="${deprecation}" classpathref="build.classpath"
           optimize="off" source="1.5" includeantruntime="false">
      <!-- <compilerarg value="-Xlint"/> -->
    </javac>
    <copy todir="${dir.build.classes}">
      <fileset dir="${dir.src}">
        <include name="**/*.properties"/>
        <include name="**/*.xml"/>
        <exclude name="**/*_sample"/>
      </fileset>
    </copy>
  </target>
    
  <target name="compileTests" depends="compile">
    <javac srcdir="${dir.tsrc}" destdir="${dir.build.tclasses}" debug="${debug}"
           deprecation="${deprecation}" classpathref="build.classpath"
           optimize="off" source="1.5" includeantruntime="false"/>
  </target>

  <target name="compileAll" depends="compile,compileTests"/>

  <target name="test" depends="compileTests">
    <java classname="org.usvo.openid.test.AllUsefulTests" fork="true" classpathref="test.classpath">
      <assertions>
        <enable/>
      </assertions>
    </java>
  </target>

  <target name="jar" depends="compile">
    <jar jarfile="${jar.path}" basedir="${dir.build.classes}" />
  </target>

  <!--
    -  create the runtime properties file
    -->
  <target name="runtime-props" depends="init">
    <property file="${dir.etc}/openid.properties" prefix="runtime" />
    <ant target="-write-runtime-props" inheritAll="false" 
         antfile="build-openidip-properties.xml">
      <property name="destfile" value="${dir.build}/openid.properties" />
      <propertyset>
        <propertyref prefix="runtime."/>
        <mapper type="glob" from="runtime.*" to="*"/>
      </propertyset>
    </ant>
  </target>

  <target name="war" depends="jar,runtime-props">
    <copy todir="${dir.build.lib}" flatten="true">
      <fileset dir="${dir.jars}">
        <include name="**/*.jar"/>
      </fileset>
    </copy>

    <war destfile="${war.path}" webxml="${dir.web}/web.xml">
      <fileset dir="${dir.web}/jsp" />
      <webinf dir="${dir.web}">
        <include name="templates/**"/>
        <exclude name="**/*.orig"/>
      </webinf>
      <webinf file="${dir.build}/openid.properties"/>
      <lib dir="${dir.build.lib}" />

      <!--
        -  openid-ip.jar installed via lib above
        -
      <lib file="${dir.build}">
        <include name="${jar.name}" />
      </lib>
        -->
    </war>
    <available file="${war.path}" property="war.available"/>
  </target>

  <target name="clean">
    <delete dir="${dir.build}" />
  </target>

  <target name="distclean" depends="clean">
    <delete file="${war.path}" />
    <delete file="${jar.path}" />
  </target>

  <target name="deploy" depends="war">
    <copy file="${war.path}" todir="${dir.deploy}"/>
    <!--
    <copy file="${src.webapp.dir}/favicon.ico" todir="${deploy.dir}/ROOT"/>
      -->
  </target>

  <target name="try">
    <!-- <echo>classpath: ${toString:build.classpath}</echo> -->
    <echo>inherit file: ${inherit-properties}</echo>
  </target>

<!--
  <target name="cleanTomcatWebappExtracted">
    <delete dir="${deploy.webapp.dir}"/>
  </target>
  -->
</project>
